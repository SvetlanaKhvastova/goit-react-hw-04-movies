{"version":3,"sources":["services/services.js","components/Cast/Cast.jsx"],"names":["key","a","url","axios","get","response","data","results","console","log","search","movieId","defaults","baseURL","services","getTrending","searchMovies","getMovieDetails","getMovieCredits","getMovieReviews","Cast","state","cast","this","props","match","params","then","setState","map","id","name","character","profile_path","src","alt","Component"],"mappings":"sMACIA,EAAG,mC,4CAGP,kCAAAC,EAAA,6DACMC,EADN,mCACwCF,GADxC,SAEyBG,IAAMC,IAAIF,GAFnC,cAEQG,EAFR,gBAGqBA,EAASC,KAH9B,cAGQA,EAHR,gBAIwBA,EAAKC,QAJ7B,cAIQA,EAJR,OAKEC,QAAQC,IAAIF,GALd,kBAMSA,GANT,6C,kEASA,WAA4BG,GAA5B,qBAAAT,EAAA,6DACMC,EADN,6BACkCQ,EADlC,oBACoDV,GADpD,SAEyBG,IAAMC,IAAIF,GAFnC,cAEQG,EAFR,gBAGqBA,EAASC,KAH9B,cAGQA,EAHR,gBAIwBA,EAAKC,QAJ7B,cAIQA,EAJR,OAKEC,QAAQC,IAAIF,GALd,kBAMSA,GANT,6C,kEASA,WAA+BI,GAA/B,qBAAAV,EAAA,6DACMC,EADN,gBACqBS,EADrB,oBACwCX,GACtCQ,QAAQC,IAAIP,GAFd,SAGyBC,IAAMC,IAAIF,GAHnC,cAGQG,EAHR,gBAIqBA,EAASC,KAJ9B,cAIQA,EAJR,OAKEE,QAAQC,IAAIH,GALd,UAMwBA,EAAKC,QAN7B,eAMQA,EANR,OAOEC,QAAQC,IAAIF,GAPd,kBAQSA,GART,6C,kEAWA,WAA+BI,GAA/B,qBAAAV,EAAA,6DACMC,EADN,gBACqBS,EADrB,4BACgDX,GADhD,SAEyBG,IAAMC,IAAIF,GAFnC,cAEQG,EAFR,gBAGqBA,EAASC,KAH9B,cAGQA,EAHR,gBAIwBA,EAAKC,QAJ7B,cAIQA,EAJR,OAKEC,QAAQC,IAAIF,GALd,kBAMSA,GANT,6C,kEASA,WAA+BI,GAA/B,qBAAAV,EAAA,6DACMC,EADN,gBACqBS,EADrB,4BACgDX,GADhD,SAEyBG,IAAMC,IAAIF,GAFnC,cAEQG,EAFR,gBAGqBA,EAASC,KAH9B,cAGQA,EAHR,gBAIwBA,EAAKC,QAJ7B,cAIQA,EAJR,OAKEC,QAAQC,IAAIF,GALd,kBAMSA,GANT,6C,sBAxCAJ,IAAMS,SAASC,QAAf,gCAiDA,IAAMC,EAAW,CACfC,Y,2CACAC,a,4CACAC,gB,4CACAC,gB,4CACAC,gB,6CAGaL,a,yGCtDTM,E,4MACJC,MAAQ,CACNC,KAAM,I,uDAGR,WAAqB,IAAD,OACVX,EAAYY,KAAKC,MAAMC,MAAMC,OAA7Bf,SAGRO,EAF4BJ,UAApBI,iBAEQP,GAASgB,MAAK,SAAAL,GAC5B,EAAKM,SAAS,CAAEN,c,oBAIpB,WAAU,IACAA,EAASC,KAAKF,MAAdC,KAER,OACE,8BACE,6BACGA,EAAKO,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAChC,OACE,+BACE,qBAAKC,IAAKD,EAAcE,IAAKJ,IAC7B,6BAAKA,IACL,4BAAIC,MAHGF,c,GAtBJM,aAuCJhB,a","file":"static/js/4.f977627b.chunk.js","sourcesContent":["import axios from 'axios';\r\nlet key = `ca68a7af060f5e9f7b7eefce94561f3e`;\r\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\r\n\r\nasync function getTrending() {\r\n  let url = `trending/all/day?api_key=${key}`;\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n  const results = await data.results;\r\n  console.log(results);\r\n  return results;\r\n}\r\n\r\nasync function searchMovies(search) {\r\n  let url = `search/movie?query=${search}&api_key=${key}`;\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n  const results = await data.results;\r\n  console.log(results);\r\n  return results;\r\n}\r\n\r\nasync function getMovieDetails(movieId) {\r\n  let url = `movie/${movieId}?api_key=${key}`;\r\n  console.log(url);\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n  console.log(data);\r\n  const results = await data.results;\r\n  console.log(results);\r\n  return results;\r\n}\r\n\r\nasync function getMovieCredits(movieId) {\r\n  let url = `movie/${movieId}/credits?api_key=${key}`;\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n  const results = await data.results;\r\n  console.log(results);\r\n  return results;\r\n}\r\n\r\nasync function getMovieReviews(movieId) {\r\n  let url = `movie/${movieId}/reviews?api_key=${key}`;\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n  const results = await data.results;\r\n  console.log(results);\r\n  return results;\r\n}\r\n\r\nconst services = {\r\n  getTrending,\r\n  searchMovies,\r\n  getMovieDetails,\r\n  getMovieCredits,\r\n  getMovieReviews,\r\n};\r\n\r\nexport default services;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport services from '../../services/services';\r\nimport s from './Cast.module.css';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const { getMovieCredits } = services;\r\n\r\n    getMovieCredits(movieId).then(cast => {\r\n      this.setState({ cast });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {cast.map(({ id, name, character, profile_path }) => {\r\n            return (\r\n              <li key={id}>\r\n                <img src={profile_path} alt={name} />\r\n                <h4>{name}</h4>\r\n                <p>{character}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCast.propTypes = {\r\n  moviesId: PropTypes.string,\r\n};\r\n\r\nexport default Cast;\r\n"],"sourceRoot":""}