{"version":3,"sources":["services/services.js","components/Form/Form.jsx","pages/MoviesPage/MoviesPage.jsx","components/Form/Form.module.css"],"names":["key","a","url","axios","get","response","data","results","console","log","search","movieId","defaults","baseURL","services","getTrending","searchMovies","getMovieDetails","getMovieCredits","getMovieReviews","Form","state","queryValue","handleChange","e","setState","target","value","handleSubmit","ev","preventDefault","onSubmit","props","trim","this","className","s","Searchbar","SearchForm","type","SearchForm_button","SearchForm_button_label","onChange","SearchForm_input","autoComplete","autoFocus","placeholder","Component","ListFilms","lazy","MoviesPage","query","searchFilms","getSearchFilms","searchQuery","then","onSubmitForm","currentQuery","history","location","toLowerCase","push","pathname","prevProps","prevState","prevQuery","fallback","to","render","prop","films","module","exports"],"mappings":"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","file":"static/js/2.ce30df04.chunk.js","sourcesContent":["import axios from 'axios';\r\nlet key = `ca68a7af060f5e9f7b7eefce94561f3e`;\r\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\r\n\r\nasync function getTrending() {\r\n  let url = `trending/all/day?api_key=${key}`;\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n  const results = await data.results;\r\n  console.log(results);\r\n  return results;\r\n}\r\n\r\nasync function searchMovies(search) {\r\n  let url = `search/movie?query=${search}&api_key=${key}`;\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n  const results = await data.results;\r\n  console.log(results);\r\n  return results;\r\n}\r\n\r\nasync function getMovieDetails(movieId) {\r\n  let url = `movie/${movieId}?api_key=${key}`;\r\n  console.log(url);\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n  console.log(data);\r\n  const results = await data.results;\r\n  console.log(results);\r\n  return results;\r\n}\r\n\r\nasync function getMovieCredits(movieId) {\r\n  let url = `movie/${movieId}/credits?api_key=${key}`;\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n  const results = await data.results;\r\n  console.log(results);\r\n  return results;\r\n}\r\n\r\nasync function getMovieReviews(movieId) {\r\n  let url = `movie/${movieId}/reviews?api_key=${key}`;\r\n  const response = await axios.get(url);\r\n  const data = await response.data;\r\n  const results = await data.results;\r\n  console.log(results);\r\n  return results;\r\n}\r\n\r\nconst services = {\r\n  getTrending,\r\n  searchMovies,\r\n  getMovieDetails,\r\n  getMovieCredits,\r\n  getMovieReviews,\r\n};\r\n\r\nexport default services;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    queryValue: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      queryValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = ev => {\r\n    ev.preventDefault();\r\n\r\n    const { queryValue } = this.state;\r\n    const { onSubmit } = this.props;\r\n\r\n    if (queryValue.trim() === '') {\r\n      return;\r\n    }\r\n    onSubmit(queryValue);\r\n\r\n    this.setState({\r\n      queryValue: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { handleChange, handleSubmit } = this;\r\n\r\n    return (\r\n      <div className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchForm_button}>\r\n            <span className={s.SearchForm_button_label}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={handleChange}\r\n            value={this.state.queryValue}\r\n            className={s.SearchForm_input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search...\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Form;\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport services from '../../services/services';\r\nimport Form from '../../components/Form/Form';\r\nimport Spinner from '../../components/Loader/Loader';\r\nconst { searchMovies } = services;\r\n\r\nconst ListFilms = lazy(() => import('../../components/ListFilms/ListFilms'));\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    query: null,\r\n    searchFilms: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(`componentDidMount`);\r\n    const { pathname, search } = this.props.location;\r\n\r\n    if (pathname && search) {\r\n      this.setState({ query: search });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(`componentDidUpdate`);\r\n    const { query: prevQuery } = prevState;\r\n    const { query: currentQuery } = this.state;\r\n\r\n    if (prevQuery !== currentQuery) {\r\n      this.getSearchFilms(currentQuery);\r\n    }\r\n  }\r\n\r\n  getSearchFilms = searchQuery => {\r\n    searchMovies(searchQuery).then(results => {\r\n      this.setState({ searchFilms: results });\r\n    });\r\n  };\r\n\r\n  onSubmitForm = currentQuery => {\r\n    const { history, location } = this.props;\r\n\r\n    this.setState({ query: currentQuery.toLowerCase() });\r\n\r\n    history.push({ ...location, search: `query=${currentQuery.trim()}` });\r\n  };\r\n\r\n  render() {\r\n    const { query, searchFilms } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.onSubmitForm} />\r\n\r\n        {searchFilms && (\r\n          <Suspense fallback={<Spinner />}>\r\n            <Switch>\r\n              <Route\r\n                to={`/movies/query=${query}`}\r\n                render={prop => <ListFilms films={searchFilms} {...prop} />}\r\n              />\r\n            </Switch>\r\n          </Suspense>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MoviesPage;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Form_Searchbar__29NrL\",\"SearchForm\":\"Form_SearchForm__3FDnH\",\"SearchForm_button\":\"Form_SearchForm_button__2DqHt\",\"SearchForm_button_label\":\"Form_SearchForm_button_label__3-6Wa\",\"SearchForm_input\":\"Form_SearchForm_input__1acRv\"};"],"sourceRoot":""}